@page "/weather"
@inject HttpClient client
@inject IJSRuntime JS

<PageTitle>Weather</PageTitle>

<h1>Weather</h1>

<p>This component demonstrates fetching data from the server.</p>

<input @bind-value="@cityName" />

<p>City:  @cityName</p>
<button type="button" @onclick="HandleSumbit">Show</button>
<button type="button" @onclick="CallJS">Time at Paris</button>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            @locat.name
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>
        
            @foreach (var forecast in forecasts)
            {
                <tr>
                    
                    <td>@DateTime.Parse(forecast.date).ToShortDateString()</td>
                    <td>@forecast.day.avgtemp_c</td>
                    <td>@forecast.day.avgtemp_f</td>
                    <td>@forecast.day.condition.text</td>

                </tr>
            }
        </tbody>
    </table>
}

@code {
    private Forecastday[]? forecasts;
    private Location locat;
    private string cityName;
    protected override async Task OnInitializedAsync()
    {
        var request = new HttpRequestMessage
            {
                Method = HttpMethod.Get,
                RequestUri = new Uri("https://weatherapi-com.p.rapidapi.com/forecast.json?q=Moscow&days=5"),
                Headers =
                            {
                                { "X-RapidAPI-Key", "3511a1ba9amsha0a0b9116c590a6p14ddadjsnb71ed89888a0"  },
                                { "X-RapidAPI-Host", "weatherapi-com.p.rapidapi.com" },
                            },
            };
        using (var response = await client.SendAsync(request))
        {
            response.EnsureSuccessStatusCode();
            var body = await response.Content.ReadAsStringAsync();
            forecasts = JsonConvert.DeserializeObject<WeatherForecast>(body)?.forecast.forecastday;
            locat = JsonConvert.DeserializeObject<WeatherForecast>(body)?.location;
        }
    }
    private async Task CallJS()
    {
        cityName = await JS.InvokeAsync<string>("GetCity");
        await HandleSumbit();
    }

    private async Task HandleSumbit()
    {
        var request = new HttpRequestMessage
            {
                Method = HttpMethod.Get,
                RequestUri = new Uri($"https://weatherapi-com.p.rapidapi.com/forecast.json?q={cityName}&days=5"),
                Headers =
                            {
                                { "X-RapidAPI-Key", "3511a1ba9amsha0a0b9116c590a6p14ddadjsnb71ed89888a0"  },
                                { "X-RapidAPI-Host", "weatherapi-com.p.rapidapi.com" },
                            },
            };
        using (var response = await client.SendAsync(request))
        {
            response.EnsureSuccessStatusCode();
            var body = await response.Content.ReadAsStringAsync();
            forecasts = JsonConvert.DeserializeObject<WeatherForecast>(body)?.forecast.forecastday;
            locat = JsonConvert.DeserializeObject<WeatherForecast>(body)?.location;
        }
    }

    public class WeatherForecast
    {
        public Location location { get; set; }
        public Current current { get; set; }
        public Forecast forecast { get; set; }
    }

    public class Location
    {
        public string name { get; set; }
        public string region { get; set; }
        public string country { get; set; }
        public float lat { get; set; }
        public float lon { get; set; }
        public string tz_id { get; set; }
        public int localtime_epoch { get; set; }
        public string localtime { get; set; }
    }

    public class Current
    {
        public int last_updated_epoch { get; set; }
        public string last_updated { get; set; }
        public double temp_c { get; set; }
        public double temp_f { get; set; }
        public int is_day { get; set; }
        public Condition condition { get; set; }
        public float wind_mph { get; set; }
        public float wind_kph { get; set; }
        public int wind_degree { get; set; }
        public string wind_dir { get; set; }
        public double pressure_mb { get; set; }
        public float pressure_in { get; set; }
        public double precip_mm { get; set; }
        public double precip_in { get; set; }
        public int humidity { get; set; }
        public double cloud { get; set; }
        public float feelslike_c { get; set; }
        public float feelslike_f { get; set; }
        public double vis_km { get; set; }
        public double vis_miles { get; set; }
        public double uv { get; set; }
        public double gust_mph { get; set; }
        public float gust_kph { get; set; }
    }

    public class Condition
    {
        public string text { get; set; }
        public string icon { get; set; }
        public int code { get; set; }
    }

    public class Forecast
    {
        public Forecastday[] forecastday { get; set; }
    }

    public class Forecastday
    {
        public string date { get; set; }
        public int date_epoch { get; set; }
        public Day day { get; set; }
        public Astro astro { get; set; }
        public Hour[] hour { get; set; }
    }

    public class Day
    {
        public float maxtemp_c { get; set; }
        public float maxtemp_f { get; set; }
        public float mintemp_c { get; set; }
        public float mintemp_f { get; set; }
        public float avgtemp_c { get; set; }
        public float avgtemp_f { get; set; }
        public float maxwind_mph { get; set; }
        public float maxwind_kph { get; set; }
        public float totalprecip_mm { get; set; }
        public float totalprecip_in { get; set; }
        public float totalsnow_cm { get; set; }
        public float avgvis_km { get; set; }
        public float avgvis_miles { get; set; }
        public float avghumidity { get; set; }
        public float daily_will_it_rain { get; set; }
        public float daily_chance_of_rain { get; set; }
        public float daily_will_it_snow { get; set; }
        public float daily_chance_of_snow { get; set; }
        public Condition1 condition { get; set; }
        public float uv { get; set; }
    }

    public class Condition1
    {
        public string text { get; set; }
        public string icon { get; set; }
        public int code { get; set; }
    }

    public class Astro
    {
        public string sunrise { get; set; }
        public string sunset { get; set; }
        public string moonrise { get; set; }
        public string moonset { get; set; }
        public string moon_phase { get; set; }
        public int moon_illumination { get; set; }
        public int is_moon_up { get; set; }
        public int is_sun_up { get; set; }
    }

    public class Hour
    {
        public int time_epoch { get; set; }
        public string time { get; set; }
        public float temp_c { get; set; }
        public float temp_f { get; set; }
        public int is_day { get; set; }
        public Condition2 condition { get; set; }
        public float wind_mph { get; set; }
        public float wind_kph { get; set; }
        public int wind_degree { get; set; }
        public string wind_dir { get; set; }
        public float pressure_mb { get; set; }
        public float pressure_in { get; set; }
        public float precip_mm { get; set; }
        public float precip_in { get; set; }
        public float snow_cm { get; set; }
        public float humidity { get; set; }
        public float cloud { get; set; }
        public float feelslike_c { get; set; }
        public float feelslike_f { get; set; }
        public float windchill_c { get; set; }
        public float windchill_f { get; set; }
        public float heatindex_c { get; set; }
        public float heatindex_f { get; set; }
        public float dewpoint_c { get; set; }
        public float dewpoint_f { get; set; }
        public int will_it_rain { get; set; }
        public int chance_of_rain { get; set; }
        public int will_it_snow { get; set; }
        public int chance_of_snow { get; set; }
        public float vis_km { get; set; }
        public float vis_miles { get; set; }
        public float gust_mph { get; set; }
        public float gust_kph { get; set; }
        public float uv { get; set; }
    }

    public class Condition2
    {
        public string text { get; set; }
        public string icon { get; set; }
        public int code { get; set; }
    }


}
